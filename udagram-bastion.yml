Description: >
  Henry Ezedinma / Udacity Cloud Devops 2020
  CloudFormation File to deploy a Bastion Host

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  BastionSourceIP:
    Description: Ip address to allow SSH access to the bastion host
    Type: String
    Default: 197.211.32.0/19

  BastionBucketSSH:
    Description: Bucket which ssh key is hosted
    Type: String
    Default: udakey

  BastionKeySSH:
    Description: KeyName to access bastion host
    Type: AWS::EC2::KeyPair::KeyName
    Default: udagram

Resources:
  BastionIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"

  BastionIamPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: fullAccess
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "s3:*"
            Resource: "*"
      Roles:
        - !Ref BastionIamRole

  BastionIamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref BastionIamRole

  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH access to bastion host
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
      SecurityGroupEgress:
        - IpProtocol: "tcp"
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Sub ${BastionSourceIP}

  BastionInstance0:
    Type: AWS::EC2::Instance
    DependsOn:
      - BastionSecurityGroup
      - BastionIamInstanceProfile
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install unzip awscli -y
          cd /home/ubuntu
          aws s3 cp s3://${BastionBucketSSH}/${BastionKeySSH}.pem /home/ubuntu
          chmod 400 ${BastionKeySSH}.pem
      IamInstanceProfile: !Ref BastionIamInstanceProfile
      SecurityGroupIds:
        - Ref: BastionSecurityGroup
      SubnetId:
        Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
      ImageId: ami-07b4f3c02c7f83d59
      InstanceType: t3.micro
      KeyName: !Sub ${BastionKeySSH}

  EIP0:
    Type: AWS::EC2::EIP
    Properties:
      Domain:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"

  EIPAssociation0:
    Type: AWS::EC2::EIPAssociation
    DependsOn:
      - BastionInstance0
      - EIP0
    Properties:
      InstanceId:
        Ref: BastionInstance0
      AllocationId:
        Fn::GetAtt:
          - EIP0
          - AllocationId

  BastionInstance1:
    Type: AWS::EC2::Instance
    DependsOn:
      - BastionSecurityGroup
      - BastionIamInstanceProfile
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install unzip awscli -y
          cd /home/ubuntu
          aws s3 cp s3://${BastionBucketSSH}/${BastionKeySSH}.pem /home/ubuntu
          chmod 400 ${BastionKeySSH}.pem
      IamInstanceProfile: !Ref BastionIamInstanceProfile
      ImageId: ami-07b4f3c02c7f83d59
      InstanceType: t3.micro
      KeyName: !Sub ${BastionKeySSH}
      SecurityGroupIds:
        - Ref: BastionSecurityGroup
      SubnetId:
        Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"

  EIP1:
    Type: AWS::EC2::EIP
    Properties:
      Domain:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"

  EIPAssociation1:
    Type: AWS::EC2::EIPAssociation
    DependsOn:
      - BastionInstance1
      - EIP1
    Properties:
      InstanceId:
        Ref: BastionInstance1
      AllocationId:
        Fn::GetAtt:
          - EIP1
          - AllocationId

Outputs:
  CIDRBastion0:
    Description: The CIDR of Bastion Host 0
    Value: !Join ["", [!GetAtt BastionInstance0.PrivateIp, !Sub "/32"]]
    Export:
      Name: !Sub ${EnvironmentName}-BASTION0-CIDR

  CIDRBastion1:
    Description: The CIDR to the Bastion Host 1
    Value: !Join ["", [!GetAtt BastionInstance1.PrivateIp, !Sub "/32"]]
    Export:
      Name: !Sub ${EnvironmentName}-BASTION1-CIDR

  BastionKeySSH:
    Description: SSH Key Name
    Value: !Sub ${BastionKeySSH}
    Export:
      Name: !Sub ${EnvironmentName}-BASTION-KEYNAME
